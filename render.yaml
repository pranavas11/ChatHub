services:
  # 1) SearXNG as a Private Service
  - type: web
    name: searxng
    runtime: docker
    region: virginia
    plan: free
    dockerfilePath: ./searxng.dockerfile
    dockerContext: .
    envVars:
      - key: PORT
        value: 8080  # SearXNG listens on 8080
    healthCheckPath: /

  # 2) Backend (public Web Service so the browser can call it; switch to pserv if you keep it internal)
  - type: web
    name: jupyter-backend
    runtime: docker
    region: virginia
    plan: free
    dockerfilePath: ./backend.dockerfile
    dockerContext: .
    envVars:
      - key: SEARXNG_API_URL
        value: https://searxng-18u5.onrender.com
      # - key: PORT
      #   value: 3001
      - key: PORT
        value: 10000
      - key: GEMINI_API_KEY
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: GROQ_API_KEY
        sync: false
      - key: SIMILARITY_MEASURE
        value: cosine
      - key: MODEL_NAME
        value: gemini-1.5-flash
    healthCheckPath: /healthz

  # 3) Frontend (Next.js)
  - type: web
    name: jupyter-ai
    runtime: docker
    region: virginia
    plan: free
    dockerfilePath: ./app.dockerfile
    dockerContext: .
    envVars:
      - key: NEXT_PUBLIC_API_URL
        value: https://jupyter-backend-vg7p.onrender.com/api
      - key: NEXT_PUBLIC_WS_URL
        value: wss://jupyter-backend-vg7p.onrender.com/ws
      - key: NODE_ENV
        value: production
